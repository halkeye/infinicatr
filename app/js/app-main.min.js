jQuery(document).ready(function() {
  "use strict";
  var templates = window.templates;
  var $car = jQuery('#catCarousel .carousel-inner');
  var $pending = jQuery('#loading_flickr_indicator').hide();

  var config = {};
  config.flickr_key = '850775ffc1d6d95478d78bee0fdf4971';
  config.pending_message = "Please wait. Fetching more content";
  config.page_size = 10;
  config.pending_photos_threshold = Math.floor(config.page_size*1/3);
  config.max_photos = config.page_size * 3;

  var page = 1;
  var pendingMorePhotos = 0;
  var morePhotosSuccess = function(data) {
    var windowWidth = jQuery(window).width()+'px';
    pendingMorePhotos = 0;
    /* Make sure we wrap around and start again on page 1 (1 based) */
    page = (data.photos.page % data.photos.pages) + 1;
    /* Add photos to the page */
    jQuery.each(data.photos.photo, function(idx,elm) {
      if (!elm.url_z) { return; } // bad image?
      // https://www.flickr.com/services/api/misc.urls.html
      elm.photo_info_url = "https://www.flickr.com/photos/{user-id}/{photo-id}"
        .replace('{photo-id}', elm.id)
        .replace('{user-id}', elm.owner);
      var $div = $car.append(templates.carousel_entry.render({ elm: elm }));
      $div.find('.flickr_img').css('max-width',windowWidth);
    });
    /* None are active on screen yet */
    if ($car.find('.active').length === 0)
    {
      $car.children().eq(0).addClass('active');
    }
    if ($car.children().length > config.max_photos) {
      /* Anything above the max we want on a page we should remove */
      var removalCount = $car.children().length - config.max_photos;
      $car.children().filter(':not(.active):lt('+removalCount+')').remove();
    }
  };
  var getMorePhotos = function(callback) {
    if (pendingMorePhotos) { return; }
    /* Fetching photos! PLEASE WAIT! */
    pendingMorePhotos = 1;
    var query = {
      dataType: 'jsonp',
      jsonp: 'jsoncallback',
      beforeSend: function() {
        $pending.show();
      },
      complete: function() {
        /* Done fetching images, so hide progress */
        $pending.hide();
        if(callback) { callback(); }
      },
      success: morePhotosSuccess,
      data: {
        'api_key': config.flickr_key,
        'content_type': '1', // 1 = photos only
        'extras':['url_z','media'].join(','),
        'format':'json',
        'method':'flickr.photos.search',
        'media':'photos',
        'page':page,
        'per_page':config.page_size,
        'safe_search': '1', // 1 = safe search
        'tags':'cats'
      }
    };
    $.ajax('https://api.flickr.com/services/rest/', query);
  };
  /* Initial Fetch */
  getMorePhotos();
  var carFuncs = {
    next: function() {
      if (!pendingMorePhotos) {
        $car.carousel('next');
      } else {
        alert(config.pending_message);
      }
    },
    prev: function() {
      $car.carousel('prev');
    }
  };
  var swipeEventFunction = function(event, direction, distance, fingerCount) {
    if (direction === "left") {
      carFuncs.prev();
    }
    else if (direction === "right") {
      carFuncs.next();
    }
    else { return; }
  };
  jQuery('#catCarousel').swipe({
    swipe: swipeEventFunction,
    threshold:0,
    fingers:'all'
  });

  jQuery('#catCarousel-prev').bind('click', function(e) {
    e.preventDefault();
    carFuncs.prev();
  });
  jQuery('#catCarousel-next').bind('click', function(e) {
    e.preventDefault();
    carFuncs.next();
  });
  Mousetrap.bind('left', carFuncs.prev);
  Mousetrap.bind('right', carFuncs.next);
  jQuery(window).on('shake', carFuncs.next);

  // Could be slid or slide (slide happens before animation, slid happens after)
  $car.on('slide', function(data) {
    var $this = jQuery(this);
    var $active = $this.find('.item.active');
    var current = $car.children().index($active);
    if (current > $car.children().length - config.pending_photos_threshold /* threshold */) {
      getMorePhotos();
    }
  });

  $car.carousel();
});
